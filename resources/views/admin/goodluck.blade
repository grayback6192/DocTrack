 @extends('orgcharttemplate')
 @section('orgchart')
  <script type='text/javascript'>//<![CDATA[ 
    $(window).load(function () {
      var options = new primitives.famdiagram.Config();
        var treeItems = {};
       var items = [
                     @foreach($files as $file)
                      { id: '{{$file[0]['groupid']}}',title: "{{$file[0]['depName']}}",email: "{{$file[0]['depName']}}", templateName: "contactTemplate",
                    itemTitleColor: "green",
                    phone:'{{$file[0]['depName']}}',
                   parents: [{{$file[0]['motherDep']}}], description: "{{$file[0]['depName']}}"},
 
               @endforeach

            ];
      options.groupByType = primitives.common.GroupByType.Parent;
      options.verticalAlignmentType=primitives.common.VerticalAlignmentType.Bottom;
      options.orientationType = primitives.common.OrientationType.Top;
      options.pageFitMode = primitives.common.PageFitMode.auto;
      options.graphicsType = primitives.common.GraphicsType.Auto;
      options.items = items;
      options.cursorItem = 2;
      options.linesWidth = 1;
      options.linesColor = "black";
      options.normalLevelShift = 35;
      options.dotLevelShift = 10;
      options.lineLevelShift = 10;
      options.normalItemsInterval = 40;
      options.dotItemsInterval = 10;
      options.lineItemsInterval = 10;
      options.arrowsDirection = primitives.common.GroupByType.false;
      options.showExtraArrows = false;
      options.autoSizeMaximum = true;
      options.navigationMode = primitives.common.NavigationMode.Default;
      options.highlightGravityRadius= 40;
      options.enablePanning= true;
      options.selectionPathMode = primitives.common.SelectionPathMode.FullStack;
      options.neighboursSelectionMode = primitives.common.NeighboursSelectionMode.ParentsChildrenSiblingsAndSpouses;
      options.templates = [getCursorTemplate()];
      options.onItemRender = onTemplateRender;  
      options.hasSelectorCheckbox = primitives.common.Enabled.True; 
      options.onSelectionChanging =   true; 
      // options.enableMatrixLayout = true;
      // options.minimumMatrixSize = 3;
      options.hasSelectorCheckbox = primitives.common.Enabled.False;
      options.hasButtons = primitives.common.Enabled.False;
      options.onMouseClick = onMouseClick;
      options.templates = [getCursorTemplate()];
      options.defaultTemplateName = "CursorTemplate";

  

        function getCursorTemplate() {
            var result = new primitives.orgdiagram.TemplateConfig();
            result.name = "CursorTemplate";

            result.itemSize = new primitives.common.Size(220, 120);
            result.minimizedItemSize = new primitives.common.Size(3, 3);
            result.highlightPadding = new primitives.common.Thickness(1, 1, 1, 1);
            result.cursorPadding = new primitives.common.Thickness(2, 2, 48, 6);

             var cursorTemplate = jQuery("<div></div>")
                .css({
                position: "absolute",
                overflow: "hidden",
                width: (result.itemSize.width + result.cursorPadding.left + result.cursorPadding.right) + "px",
                height: (result.itemSize.height + result.cursorPadding.top + result.cursorPadding.bottom) + "px"
                });

            var cursorBorder = jQuery("<div></div>")
                .css({
                width: (result.itemSize.width + result.cursorPadding.left + 1) + "px",
                height: (result.itemSize.height + result.cursorPadding.top + 1) + "px"
                }).addClass("bp-item bp-corner-all bp-cursor-frame");
            cursorTemplate.append(cursorBorder);

            var bootStrapVerticalButtonsGroup = jQuery("<div></div>")
                .css({
                position: "absolute",
                overflow: "hidden",
                top: result.cursorPadding.top + "px",
                left: (result.itemSize.width + result.cursorPadding.left + 10) + "px",
                width: "35px",
                height: (result.itemSize.height + 1) + "px"
                }).addClass("btn-group btn-group-vertical");

      bootStrapVerticalButtonsGroup.append('<button class="btn btn-small" data-buttonname="info" type="button"><i class="material-icons">add</i></button>');
      // bootStrapVerticalButtonsGroup.append('<button class="btn btn-small" data-buttonname="edit" type="button"><i class="material-icons">add</i></button>');
      // bootStrapVerticalButtonsGroup.append('<button class="btn btn-small" data-buttonname="remove" type="button"><i class="icon-remove"></i></button>');

      cursorTemplate.append(bootStrapVerticalButtonsGroup);

      result.cursorTemplate = cursorTemplate.wrap('<div>').parent().html();

      return result;
    }

        function onMouseClick(event, data) {
      var target = jQuery(event.originalEvent.target);
      if (target.hasClass("btn") || target.parent(".btn").length > 0) {
        var button = target.hasClass("btn") ? target : target.parent(".btn");
        var buttonname = button.data("buttonname");

        var message = "User clicked '" + buttonname + "' button for item '" + data.context.title + "'.";
        message += (data.parentItem != null ? " Parent item '" + data.parentItem.title + "'" : "");
        // alert(message);
        window.location.href = 'http://localhost:8000/admin/'+{{$upgid}}+'/department/'+data.context.id +'/add';
        // data.cancel = true;
      }
    }

      jQuery("#basicdiagram").famDiagram(options);

      jQuery(".treeItem").click(function (e) {
        var selectedItems = [];
        if (jQuery("#buttonA").prop("checked")) {
          selectedItems.push(0);
        }
        if (jQuery("#buttonB").prop("checked")) {
          selectedItems.push(1);
        }
        if (jQuery("#buttonC").prop("checked")) {
          selectedItems.push(2);
        }
        jQuery("#basicdiagram").famDiagram({
          selectedItems: selectedItems
        });
        jQuery("#basicdiagram").famDiagram("update", primitives.orgdiagram.UpdateMode.Refresh);
      })



for (var index = 0, len = items.length; index < len; index += 1) {
        treeItems[items[index].id] = items[index];
      }

      function onTemplateRender(event, data) {
        switch (data.renderingMode) {
          case primitives.common.RenderingMode.Create:
            /* Initialize widgets here */
            break;
          case primitives.common.RenderingMode.Update:
            /* Update widgets here */
            break;
        }

        var itemConfig = data.context;

        if (data.templateName == "contactTemplate2") {
          // data.element.find("[name=photo]").attr({ "src": itemConfig.image, "alt": itemConfig.title });
          data.element.find("[name=titleBackground]").css({ "background": itemConfig.itemTitleColor });

          var fields = ["title", "description", "phone", "email"];
          for (var index = 0; index < fields.length; index++) {
            var field = fields[index];

            var element = data.element.find("[name=" + field + "]");
            if (element.text() != itemConfig[field]) {
              element.text(itemConfig[field]);
            }
          }
        } else if (data.templateName == "contactTemplate") {
          // data.element.find("[name=photo]").attr({ "src": itemConfig.image, "alt": itemConfig.title });
          data.element.find("[name=titleBackground]").css({ "background": itemConfig.itemTitleColor });

          var fields = ["title", "description", "phone", "email"];
          for (var index = 0; index < fields.length; index++) {
            var field = fields[index];

            var element = data.element.find("[name=" + field + "]");
            if (element.text() != itemConfig[field]) {
              element.text(itemConfig[field]);
            }
          }
        }
      }

     

      console.log(options);
     $("#basicdiagram").famDiagram(options);

     
    });//]]>  


  </script>
@endsection


@section('menu')
 <li>
              <a href="{{route('UserManage',['upgid'=>$upgid])}}" data-placement="right" title="Inbox">
                <i class="material-icons">face</i>
               <p>Users</p>
              </a>
 </li>

 <li class="active">
              {{-- <a href="{{route('showDep',['upgid'=>$upgid,'id'=>$admingroup])}}" data-placement="right" title="Inbox"> --}}
                <a href="#" data-placement="right" title="Inbox">
                <i class="material-icons">business</i>
               <p>Departments</p>
              </a>
 </li>

 <li>
              <a href="{{route('viewRolePage',['upgid'=>$upgid])}}" data-placement="right" title="Inbox">
                <i class="material-icons">event_seat</i>
                <p>Positions</p>
              </a>
 </li>

 <li>
              <a href="{{route('viewWorkflow',['upgid'=>$upgid])}}" data-placement="right" title="Inbox">
                <i class="material-icons">group</i>
               <p>Workflows</p>
              </a>
 </li>

 <li>
              <a href="{{route('viewOwners',['upgid'=>$upgid])}}" data-placement="right" title="Inbox">
                <i class="material-icons">description</i>
                <p>Templates</p>
              </a>
 </li>

 <li>
              <a href="#" data-placement="right" title="Inbox">
                <i class="material-icons">archive</i>
                <p>Archive</p>
              </a>
 </li>
@endsection

@section('main_content')
<div style="width: 1400px; height: 1100px; border-style: dotted;">
  
  <div id="message"></div>
  <div id="basicdiagram" style="width: 1200px; height: 1000px;border-width: 1px;" />
</div>


@endsection

